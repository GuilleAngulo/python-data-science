# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lzKJEMXFTk8ldh-0rdSla8wPln0kVSix
"""

import pandas as pd

films = pd.read_csv("https://raw.githubusercontent.com/GuilleAngulo/python-data-science/master/data/movies.csv")
films.head()

#Documentação
?films

ratings = pd.read_csv("https://raw.githubusercontent.com/GuilleAngulo/python-data-science/master/data/ratings.csv")
ratings.head()

#Shape -> Lines, Columns
ratings.shape

#Lines
len(ratings)

#Rename
ratings.head()

#Descriptive statistics
ratings.describe()

ratings.query("movieId==1")

notas_medias_por_filme = ratings.groupby("movieId")["rating"].mean()
notas_medias_por_filme.head()

filmes_com_media = films.join(notas_medias_por_filme, on="movieId")
filmes_com_media.head()

## Desafio 1: Encontrar os 18 filmes que não tem nota
filmes_sem_nota = filmes_com_media[filmes_com_media["media"].isna()]
len(filmes_sem_nota)

## Desafio 2: Mudar o nome da coluna nota para media apos o join.
filmes_com_media.columns = ["peliculaId", "titulo", "generos", "media"]
filmes_com_media.head()

filmes_com_media.sort_values("media", ascending=False)

## Desafio 3: Colocar o número de avaliações por filme, isto é, não só a média mas o TOTAL de votos por filme.
notas_por_filme = ratings.groupby("movieId")["rating"].count()
notas_por_filme.columns=["peliculaId"]
filmes_com_votos = filmes_com_media.join(notas_por_filme, on="peliculaId")
filmes_com_votos.rename(columns={"rating" : "votos"}, inplace=True)
filmes_com_votos['votos'] = filmes_com_votos['votos'].astype('Int64')
filmes_com_votos.head()

ratings.query("movieId==1")["rating"].plot(kind="hist", title="Avaliações do filme Toy Story")

## Desafio 4: Arredondar as médias (coluna de nota média) para duas casas decimais.
filmes_com_media['media'] = filmes_com_media['media'].round(2)
filmes_com_media.head()

## Desafio 5: Descobrir os generos dos filmes (quais são eles, únicos). (esse aqui o bicho pega)
genres = pd.DataFrame(set(films['genres'].str.get_dummies()))
genres.columns = ["Genero"]
genres.head(15)

## Desafio 6: Contar o número de aparições de cada genero.
all_gernes = pd.DataFrame(films["genres"].str.split("|").tolist(), index=films["movieId"]).stack()
all_gernes_count = all_gernes.value_counts()
all_gernes_count.head(10)

# Desafio 7: Plotar o gráfico de aparições de cada genero. Pode ser um gráfico de tipo igual a barra.
all_gernes_count.plot(kind="bar", title="Aparições por genero")

